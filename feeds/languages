<?xml version="1.0" encoding="UTF-8"?>

<rss version="2.0">
	<channel>
		<title>LispCast</title>
		<link>http://www.lispcast.com/</link>
		<description>A blog about the simple joys of functional programming.</description>
		<language>en</language>


                <item>
                  <title>Church vs Curry Types</title>
                  <guid isPermalink="false">http://www.lispcast.com/church-vs-curry-types</guid>
                  <link>http://www.lispcast.com/church-vs-curry-types</link>
                  <pubDate>Tue 15 Jul 2014 10:26:15 PM CDT</pubDate>
                  <description>
                    Static vs dynamic typing debates often flounder because the debators see from two different perspectives without knowing it. Learning to identify the two perspectives can calm the discussion. The tension between the two perspectives has led to Gradual Typing and other technologies.

                    &lt;p&gt;&lt;center&gt;&lt;a href="http://www.lispcast.com/church-vs-curry-types"&gt;Read full post&lt;/a&gt;&lt;/center&gt;&lt;/p&gt;

                  </description>
                </item>


                <item>
                  <title>CSS has Weak Forms of Abstraction and Combination</title>
                  <guid isPermalink="false">http://www.lispcast.com/css-abstraction-combination</guid>
                  <link>http://www.lispcast.com/css-abstraction-combination</link>
                  <pubDate>Sat 08 Feb 2014 01:44:44 PM CST</pubDate>
                  <description>
                    According to the requirements proposed by Abelson and Sussman, CSS does not provide adequate means of combination and abstraction to be considered a powerful language.

                    &lt;p&gt;&lt;center&gt;&lt;a href="http://www.lispcast.com/css-abstraction-combination"&gt;Read full post&lt;/a&gt;&lt;/center&gt;&lt;/p&gt;

                  </description>
                </item>


                <item>
                  <title>LESS has Better Forms of Abstraction than CSS</title>
                  <guid isPermalink="false">http://www.lispcast.com/less-abstraction-combination</guid>
                  <link>http://www.lispcast.com/less-abstraction-combination</link>
                  <pubDate>Wed 12 Feb 2014 10:16:42 PM CST</pubDate>
                  <description>
                    LESS has obviously better forms of abstraction and combination than CSS. It has recursive style definitions, which is enough to consider it a &quot;powerful language&quot;.

                    &lt;p&gt;&lt;center&gt;&lt;a href="http://www.lispcast.com/less-abstraction-combination"&gt;Read full post&lt;/a&gt;&lt;/center&gt;&lt;/p&gt;

                  </description>
                </item>


                <item>
                  <title>Lisp with Macros is Two Languages</title>
                  <guid isPermalink="false">http://www.lispcast.com/lisp-with-macros-language-stack</guid>
                  <link>http://www.lispcast.com/lisp-with-macros-language-stack</link>
                  <pubDate>Tue 08 Oct 2013 10:47:27 AM CDT</pubDate>
                  <description>
                    Lisp with macros can be seen as two languages, each with different semantics. The base language can be interpreted directly, whereas the result of interpreting the macro language is to produce a new program in the base language.

                    &lt;p&gt;&lt;center&gt;&lt;a href="http://www.lispcast.com/lisp-with-macros-language-stack"&gt;Read full post&lt;/a&gt;&lt;/center&gt;&lt;/p&gt;

                  </description>
                </item>


                <item>
                  <title>Two Kinds of Bootstrapping</title>
                  <guid isPermalink="false">http://www.lispcast.com/two-kinds-of-bootstrapping</guid>
                  <link>http://www.lispcast.com/two-kinds-of-bootstrapping</link>
                  <pubDate>Sat 23 Aug 2014 10:43:37 AM CDT</pubDate>
                  <description>
                    I like languages with a small core that is extensible. The languages tend to be weird and require less code to bootstrap.

                    &lt;p&gt;&lt;center&gt;&lt;a href="http://www.lispcast.com/two-kinds-of-bootstrapping"&gt;Read full post&lt;/a&gt;&lt;/center&gt;&lt;/p&gt;

                  </description>
                </item>

	</channel>
</rss>
